# Создаем словарь `operations`, в котором ключами выступают символы арифметических операций,
# а значениями — анонимные функции (lambda), выполняющие соответствующие математические действия.
# Функции принимают два аргумента `x` и `y` и возвращают результат операции.
operations = {
    "+": lambda x, y: x + y,  # Сложение
    "-": lambda x, y: x - y,  # Вычитание
    "/": lambda x, y: x / y,  # Деление
    "//": lambda x, y: x // y,  # Целочисленное деление
    "%": lambda x, y: x % y,  # Остаток от деления
    "*": lambda x, y: x * y  # Умножение
}


# Определяем функцию `calc`, которая принимает строку `line`, содержащую операнды и операцию, разделенные пробелами.
def calc(line):
    # Распаковываем строку на три части: первый операнд, операцию и второй операнд.
    operand_1, operation, operand_2 = line.split()

    # Преобразуем операнды в целые числа для математических операций.
    operand_1 = int(operand_1)
    operand_2 = int(operand_2)

    # Проверяем, существует ли операция в словаре `operations`.
    if operation in operations:
        # Если операция найдена, выполняем её, передавая операнды в соответствующую функцию,
        # и округляем результат до трех знаков после запятой.
        result = operations[operation](operand_1, operand_2)
        return f"Результат: {round(result, 3)}"


# Инициализируем переменную-счетчик `cnt` для подсчета строк в файле `data.txt`.
cnt = 0

# Открываем файл `data.txt` для чтения с кодировкой UTF-8.
with open("data.txt", "r", encoding="utf-8") as file:
    # Читаем файл построчно в цикле.
    for line in file:
        cnt += 1  # Увеличиваем счетчик на 1 для каждой новой строки.

        try:
            # Вызываем функцию `calc` для обработки строки `line`.
            # Временно закомментирован вывод результата.
            calc(line)
        except ValueError as exc:  # Обрабатываем исключение `ValueError` (ошибка значения).
            # Проверяем, содержит ли сообщение об ошибке слово "unpack",
            # указывающее на недостаток данных в строке для выполнения операции.
            if "unpack" in exc.args[0]:
                # Записываем сообщение об ошибке в файл `error.txt`,
                # указывая, что данных недостаточно для выполнения операции.
                with open("error.txt", "a", encoding="utf-8") as file_1:
                    file_1.write(f"Ошибка! Не хватает данных для выполнения операции ({exc}). Строка ошибки - {cnt}\n")
            else:
                # Если ошибка связана с переводом данных в число, записываем сообщение в файл `error.txt`.
                with open("error.txt", "a", encoding="utf-8") as file_1:
                    file_1.write(f"Ошибка! Не удалось перевести в число ({exc}). Строка ошибки - {cnt}\n")
        else:
            # Если ошибок не возникло, записываем результат операции в файл `result.txt`,
            # указывая также номер строки, в которой она выполнена.
            with open("result.txt", "a", encoding="utf-8") as file_1:
                file_1.write(f"{calc(line)}.  Строка операции - {cnt}\n")
